                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.0 #15242 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcdlib
                                      6 	
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CY
                                     12 	.globl _AC
                                     13 	.globl _F0
                                     14 	.globl _RS1
                                     15 	.globl _RS0
                                     16 	.globl _OV
                                     17 	.globl _F1
                                     18 	.globl _P
                                     19 	.globl _PS
                                     20 	.globl _PT1
                                     21 	.globl _PX1
                                     22 	.globl _PT0
                                     23 	.globl _PX0
                                     24 	.globl _RD
                                     25 	.globl _WR
                                     26 	.globl _T1
                                     27 	.globl _T0
                                     28 	.globl _INT1
                                     29 	.globl _INT0
                                     30 	.globl _TXD
                                     31 	.globl _RXD
                                     32 	.globl _P3_7
                                     33 	.globl _P3_6
                                     34 	.globl _P3_5
                                     35 	.globl _P3_4
                                     36 	.globl _P3_3
                                     37 	.globl _P3_2
                                     38 	.globl _P3_1
                                     39 	.globl _P3_0
                                     40 	.globl _EA
                                     41 	.globl _ES
                                     42 	.globl _ET1
                                     43 	.globl _EX1
                                     44 	.globl _ET0
                                     45 	.globl _EX0
                                     46 	.globl _P2_7
                                     47 	.globl _P2_6
                                     48 	.globl _P2_5
                                     49 	.globl _P2_4
                                     50 	.globl _P2_3
                                     51 	.globl _P2_2
                                     52 	.globl _P2_1
                                     53 	.globl _P2_0
                                     54 	.globl _SM0
                                     55 	.globl _SM1
                                     56 	.globl _SM2
                                     57 	.globl _REN
                                     58 	.globl _TB8
                                     59 	.globl _RB8
                                     60 	.globl _TI
                                     61 	.globl _RI
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _TF1
                                     71 	.globl _TR1
                                     72 	.globl _TF0
                                     73 	.globl _TR0
                                     74 	.globl _IE1
                                     75 	.globl _IT1
                                     76 	.globl _IE0
                                     77 	.globl _IT0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _B
                                     87 	.globl _ACC
                                     88 	.globl _PSW
                                     89 	.globl _IP
                                     90 	.globl _P3
                                     91 	.globl _IE
                                     92 	.globl _P2
                                     93 	.globl _SBUF
                                     94 	.globl _SCON
                                     95 	.globl _P1
                                     96 	.globl _TH1
                                     97 	.globl _TH0
                                     98 	.globl _TL1
                                     99 	.globl _TL0
                                    100 	.globl _TMOD
                                    101 	.globl _TCON
                                    102 	.globl _PCON
                                    103 	.globl _DPH
                                    104 	.globl _DPL
                                    105 	.globl _SP
                                    106 	.globl _P0
                                    107 	.globl _LCD_set_symbol_PARM_2
                                    108 	.globl _lcd_ready
                                    109 	.globl _LCD_ready
                                    110 	.globl _LCD_Init
                                    111 	.globl _LCD_IRWrite
                                    112 	.globl _LCD_functionSet
                                    113 	.globl _LCD_write_char
                                    114 	.globl _LCD_write_string
                                    115 	.globl _delay
                                    116 	.globl _LCD_set_symbol
                                    117 ;--------------------------------------------------------
                                    118 ; special function registers
                                    119 ;--------------------------------------------------------
                                    120 	.area RSEG    (ABS,DATA)
      000000                        121 	.org 0x0000
                           000080   122 _P0	=	0x0080
                           000081   123 _SP	=	0x0081
                           000082   124 _DPL	=	0x0082
                           000083   125 _DPH	=	0x0083
                           000087   126 _PCON	=	0x0087
                           000088   127 _TCON	=	0x0088
                           000089   128 _TMOD	=	0x0089
                           00008A   129 _TL0	=	0x008a
                           00008B   130 _TL1	=	0x008b
                           00008C   131 _TH0	=	0x008c
                           00008D   132 _TH1	=	0x008d
                           000090   133 _P1	=	0x0090
                           000098   134 _SCON	=	0x0098
                           000099   135 _SBUF	=	0x0099
                           0000A0   136 _P2	=	0x00a0
                           0000A8   137 _IE	=	0x00a8
                           0000B0   138 _P3	=	0x00b0
                           0000B8   139 _IP	=	0x00b8
                           0000D0   140 _PSW	=	0x00d0
                           0000E0   141 _ACC	=	0x00e0
                           0000F0   142 _B	=	0x00f0
                                    143 ;--------------------------------------------------------
                                    144 ; special function bits
                                    145 ;--------------------------------------------------------
                                    146 	.area RSEG    (ABS,DATA)
      000000                        147 	.org 0x0000
                           000080   148 _P0_0	=	0x0080
                           000081   149 _P0_1	=	0x0081
                           000082   150 _P0_2	=	0x0082
                           000083   151 _P0_3	=	0x0083
                           000084   152 _P0_4	=	0x0084
                           000085   153 _P0_5	=	0x0085
                           000086   154 _P0_6	=	0x0086
                           000087   155 _P0_7	=	0x0087
                           000088   156 _IT0	=	0x0088
                           000089   157 _IE0	=	0x0089
                           00008A   158 _IT1	=	0x008a
                           00008B   159 _IE1	=	0x008b
                           00008C   160 _TR0	=	0x008c
                           00008D   161 _TF0	=	0x008d
                           00008E   162 _TR1	=	0x008e
                           00008F   163 _TF1	=	0x008f
                           000090   164 _P1_0	=	0x0090
                           000091   165 _P1_1	=	0x0091
                           000092   166 _P1_2	=	0x0092
                           000093   167 _P1_3	=	0x0093
                           000094   168 _P1_4	=	0x0094
                           000095   169 _P1_5	=	0x0095
                           000096   170 _P1_6	=	0x0096
                           000097   171 _P1_7	=	0x0097
                           000098   172 _RI	=	0x0098
                           000099   173 _TI	=	0x0099
                           00009A   174 _RB8	=	0x009a
                           00009B   175 _TB8	=	0x009b
                           00009C   176 _REN	=	0x009c
                           00009D   177 _SM2	=	0x009d
                           00009E   178 _SM1	=	0x009e
                           00009F   179 _SM0	=	0x009f
                           0000A0   180 _P2_0	=	0x00a0
                           0000A1   181 _P2_1	=	0x00a1
                           0000A2   182 _P2_2	=	0x00a2
                           0000A3   183 _P2_3	=	0x00a3
                           0000A4   184 _P2_4	=	0x00a4
                           0000A5   185 _P2_5	=	0x00a5
                           0000A6   186 _P2_6	=	0x00a6
                           0000A7   187 _P2_7	=	0x00a7
                           0000A8   188 _EX0	=	0x00a8
                           0000A9   189 _ET0	=	0x00a9
                           0000AA   190 _EX1	=	0x00aa
                           0000AB   191 _ET1	=	0x00ab
                           0000AC   192 _ES	=	0x00ac
                           0000AF   193 _EA	=	0x00af
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000B0   202 _RXD	=	0x00b0
                           0000B1   203 _TXD	=	0x00b1
                           0000B2   204 _INT0	=	0x00b2
                           0000B3   205 _INT1	=	0x00b3
                           0000B4   206 _T0	=	0x00b4
                           0000B5   207 _T1	=	0x00b5
                           0000B6   208 _WR	=	0x00b6
                           0000B7   209 _RD	=	0x00b7
                           0000B8   210 _PX0	=	0x00b8
                           0000B9   211 _PT0	=	0x00b9
                           0000BA   212 _PX1	=	0x00ba
                           0000BB   213 _PT1	=	0x00bb
                           0000BC   214 _PS	=	0x00bc
                           0000D0   215 _P	=	0x00d0
                           0000D1   216 _F1	=	0x00d1
                           0000D2   217 _OV	=	0x00d2
                           0000D3   218 _RS0	=	0x00d3
                           0000D4   219 _RS1	=	0x00d4
                           0000D5   220 _F0	=	0x00d5
                           0000D6   221 _AC	=	0x00d6
                           0000D7   222 _CY	=	0x00d7
                                    223 ;--------------------------------------------------------
                                    224 ; overlayable register banks
                                    225 ;--------------------------------------------------------
                                    226 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        227 	.ds 8
                                    228 ;--------------------------------------------------------
                                    229 ; internal ram data
                                    230 ;--------------------------------------------------------
                                    231 	.area DSEG    (DATA)
                           00003C   232 _lcd_ready	=	0x003c
      000000                        233 _LCD_set_symbol_PARM_2:
      000000                        234 	.ds 3
                                    235 ;--------------------------------------------------------
                                    236 ; overlayable items in internal ram
                                    237 ;--------------------------------------------------------
                                    238 	.area	OSEG    (OVR,DATA)
                                    239 ;--------------------------------------------------------
                                    240 ; indirectly addressable internal ram data
                                    241 ;--------------------------------------------------------
                                    242 	.area ISEG    (DATA)
                                    243 ;--------------------------------------------------------
                                    244 ; absolute internal ram data
                                    245 ;--------------------------------------------------------
                                    246 	.area IABS    (ABS,DATA)
                                    247 	.area IABS    (ABS,DATA)
                                    248 ;--------------------------------------------------------
                                    249 ; bit data
                                    250 ;--------------------------------------------------------
                                    251 	.area BSEG    (BIT)
                                    252 ;--------------------------------------------------------
                                    253 ; paged external ram data
                                    254 ;--------------------------------------------------------
                                    255 	.area PSEG    (PAG,XDATA)
                                    256 ;--------------------------------------------------------
                                    257 ; uninitialized external ram data
                                    258 ;--------------------------------------------------------
                                    259 	.area XSEG    (XDATA)
                                    260 ;--------------------------------------------------------
                                    261 ; absolute external ram data
                                    262 ;--------------------------------------------------------
                                    263 	.area XABS    (ABS,XDATA)
                                    264 ;--------------------------------------------------------
                                    265 ; initialized external ram data
                                    266 ;--------------------------------------------------------
                                    267 	.area XISEG   (XDATA)
                                    268 	.area HOME    (CODE)
                                    269 	.area GSINIT0 (CODE)
                                    270 	.area GSINIT1 (CODE)
                                    271 	.area GSINIT2 (CODE)
                                    272 	.area GSINIT3 (CODE)
                                    273 	.area GSINIT4 (CODE)
                                    274 	.area GSINIT5 (CODE)
                                    275 	.area GSINIT  (CODE)
                                    276 	.area GSFINAL (CODE)
                                    277 	.area CSEG    (CODE)
                                    278 ;--------------------------------------------------------
                                    279 ; global & static initialisations
                                    280 ;--------------------------------------------------------
                                    281 	.area HOME    (CODE)
                                    282 	.area GSINIT  (CODE)
                                    283 	.area GSFINAL (CODE)
                                    284 	.area GSINIT  (CODE)
                                    285 ;--------------------------------------------------------
                                    286 ; Home
                                    287 ;--------------------------------------------------------
                                    288 	.area HOME    (CODE)
                                    289 	.area HOME    (CODE)
                                    290 ;--------------------------------------------------------
                                    291 ; code
                                    292 ;--------------------------------------------------------
                                    293 	.area CSEG    (CODE)
                                    294 ;------------------------------------------------------------
                                    295 ;Allocation info for local variables in function 'LCD_ready'
                                    296 ;------------------------------------------------------------
                                    297 ;	lcdlib.c:15: unsigned char LCD_ready(void) {
                                    298 ;	-----------------------------------------
                                    299 ;	 function LCD_ready
                                    300 ;	-----------------------------------------
      000000                        301 _LCD_ready:
                           000007   302 	ar7 = 0x07
                           000006   303 	ar6 = 0x06
                           000005   304 	ar5 = 0x05
                           000004   305 	ar4 = 0x04
                           000003   306 	ar3 = 0x03
                           000002   307 	ar2 = 0x02
                           000001   308 	ar1 = 0x01
                           000000   309 	ar0 = 0x00
                                    310 ;	lcdlib.c:16: return lcd_ready;
      000000 85 3C 82         [24]  311 	mov	dpl, _lcd_ready
                                    312 ;	lcdlib.c:17: }
      000003 22               [24]  313 	ret
                                    314 ;------------------------------------------------------------
                                    315 ;Allocation info for local variables in function 'LCD_Init'
                                    316 ;------------------------------------------------------------
                                    317 ;	lcdlib.c:18: void LCD_Init(void) {
                                    318 ;	-----------------------------------------
                                    319 ;	 function LCD_Init
                                    320 ;	-----------------------------------------
      000004                        321 _LCD_Init:
                                    322 ;	lcdlib.c:19: LCD_functionSet();
      000004 12r00r39         [24]  323 	lcall	_LCD_functionSet
                                    324 ;	lcdlib.c:20: LCD_entryModeSet(1, 1); /* increment and no shift */
      000007 75 82 07         [24]  325 	mov	dpl, #0x07
      00000A 12r00r17         [24]  326 	lcall	_LCD_IRWrite
                                    327 ;	lcdlib.c:21: LCD_displayOnOffControl(1, 1, 1); /* display on, cursor on and blinking on */
      00000D 75 82 0F         [24]  328 	mov	dpl, #0x0f
      000010 12r00r17         [24]  329 	lcall	_LCD_IRWrite
                                    330 ;	lcdlib.c:22: lcd_ready = 1;
      000013 75 3C 01         [24]  331 	mov	_lcd_ready,#0x01
                                    332 ;	lcdlib.c:23: }
      000016 22               [24]  333 	ret
                                    334 ;------------------------------------------------------------
                                    335 ;Allocation info for local variables in function 'LCD_IRWrite'
                                    336 ;------------------------------------------------------------
                                    337 ;c             Allocated to registers r7 
                                    338 ;------------------------------------------------------------
                                    339 ;	lcdlib.c:24: void LCD_IRWrite(char c) {
                                    340 ;	-----------------------------------------
                                    341 ;	 function LCD_IRWrite
                                    342 ;	-----------------------------------------
      000017                        343 _LCD_IRWrite:
      000017 AF 82            [24]  344 	mov	r7, dpl
                                    345 ;	lcdlib.c:25: lcd_ready = 0;
      000019 75 3C 00         [24]  346 	mov	_lcd_ready,#0x00
                                    347 ;	lcdlib.c:26: DB = (c & 0xf0); // high nibble, keep RS low
      00001C 74 F0            [12]  348 	mov	a,#0xf0
      00001E 5F               [12]  349 	anl	a,r7
      00001F F5 90            [12]  350 	mov	_P1,a
                                    351 ;	lcdlib.c:27: E = 1;  // pulse E
                                    352 ;	assignBit
      000021 D2 92            [12]  353 	setb	_P1_2
                                    354 ;	lcdlib.c:28: E = 0;
                                    355 ;	assignBit
      000023 C2 92            [12]  356 	clr	_P1_2
                                    357 ;	lcdlib.c:29: DB = (c << 4); // low nibble, keep RS low
      000025 EF               [12]  358 	mov	a,r7
      000026 C4               [12]  359 	swap	a
      000027 54 F0            [12]  360 	anl	a,#0xf0
      000029 F5 90            [12]  361 	mov	_P1,a
                                    362 ;	lcdlib.c:30: E = 1;
                                    363 ;	assignBit
      00002B D2 92            [12]  364 	setb	_P1_2
                                    365 ;	lcdlib.c:31: E = 0;
                                    366 ;	assignBit
      00002D C2 92            [12]  367 	clr	_P1_2
                                    368 ;	lcdlib.c:32: delay(DELAY_AMOUNT);
      00002F 75 82 32         [24]  369 	mov	dpl, #0x32
      000032 12r00rC2         [24]  370 	lcall	_delay
                                    371 ;	lcdlib.c:33: lcd_ready = 1;
      000035 75 3C 01         [24]  372 	mov	_lcd_ready,#0x01
                                    373 ;	lcdlib.c:34: }
      000038 22               [24]  374 	ret
                                    375 ;------------------------------------------------------------
                                    376 ;Allocation info for local variables in function 'LCD_functionSet'
                                    377 ;------------------------------------------------------------
                                    378 ;	lcdlib.c:35: void LCD_functionSet(void) {
                                    379 ;	-----------------------------------------
                                    380 ;	 function LCD_functionSet
                                    381 ;	-----------------------------------------
      000039                        382 _LCD_functionSet:
                                    383 ;	lcdlib.c:36: lcd_ready = 0;
      000039 75 3C 00         [24]  384 	mov	_lcd_ready,#0x00
                                    385 ;	lcdlib.c:39: DB = 0x20;  // DB<7:4> = 0010, <RS,E,x,x>=0
      00003C 75 90 20         [24]  386 	mov	_P1,#0x20
                                    387 ;	lcdlib.c:40: E = 1;
                                    388 ;	assignBit
      00003F D2 92            [12]  389 	setb	_P1_2
                                    390 ;	lcdlib.c:41: E = 0;
                                    391 ;	assignBit
      000041 C2 92            [12]  392 	clr	_P1_2
                                    393 ;	lcdlib.c:42: delay(DELAY_AMOUNT);
      000043 75 82 32         [24]  394 	mov	dpl, #0x32
      000046 12r00rC2         [24]  395 	lcall	_delay
                                    396 ;	lcdlib.c:43: E = 1;
                                    397 ;	assignBit
      000049 D2 92            [12]  398 	setb	_P1_2
                                    399 ;	lcdlib.c:44: E = 0;
                                    400 ;	assignBit
      00004B C2 92            [12]  401 	clr	_P1_2
                                    402 ;	lcdlib.c:45: delay(DELAY_AMOUNT); // added, to ensure sufficient delay
      00004D 75 82 32         [24]  403 	mov	dpl, #0x32
      000050 12r00rC2         [24]  404 	lcall	_delay
                                    405 ;	lcdlib.c:46: DB7 = 1; // 2-line model
                                    406 ;	assignBit
      000053 D2 97            [12]  407 	setb	_P1_7
                                    408 ;	lcdlib.c:48: E = 1;
                                    409 ;	assignBit
      000055 D2 92            [12]  410 	setb	_P1_2
                                    411 ;	lcdlib.c:49: E = 0;
                                    412 ;	assignBit
      000057 C2 92            [12]  413 	clr	_P1_2
                                    414 ;	lcdlib.c:50: delay(DELAY_AMOUNT);
      000059 75 82 32         [24]  415 	mov	dpl, #0x32
      00005C 12r00rC2         [24]  416 	lcall	_delay
                                    417 ;	lcdlib.c:51: lcd_ready = 1;
      00005F 75 3C 01         [24]  418 	mov	_lcd_ready,#0x01
                                    419 ;	lcdlib.c:52: }
      000062 22               [24]  420 	ret
                                    421 ;------------------------------------------------------------
                                    422 ;Allocation info for local variables in function 'LCD_write_char'
                                    423 ;------------------------------------------------------------
                                    424 ;c             Allocated to registers r7 
                                    425 ;------------------------------------------------------------
                                    426 ;	lcdlib.c:54: void LCD_write_char(char c) {
                                    427 ;	-----------------------------------------
                                    428 ;	 function LCD_write_char
                                    429 ;	-----------------------------------------
      000063                        430 _LCD_write_char:
      000063 AF 82            [24]  431 	mov	r7, dpl
                                    432 ;	lcdlib.c:55: lcd_ready = 0;
      000065 75 3C 00         [24]  433 	mov	_lcd_ready,#0x00
                                    434 ;	lcdlib.c:56: DB = (c & 0xf0) | 0x08; //; keep the RS
      000068 74 F0            [12]  435 	mov	a,#0xf0
      00006A 5F               [12]  436 	anl	a,r7
      00006B 44 08            [12]  437 	orl	a,#0x08
      00006D F5 90            [12]  438 	mov	_P1,a
                                    439 ;	lcdlib.c:57: RS = 1;
                                    440 ;	assignBit
      00006F D2 93            [12]  441 	setb	_P1_3
                                    442 ;	lcdlib.c:58: E = 1;
                                    443 ;	assignBit
      000071 D2 92            [12]  444 	setb	_P1_2
                                    445 ;	lcdlib.c:59: E = 0;
                                    446 ;	assignBit
      000073 C2 92            [12]  447 	clr	_P1_2
                                    448 ;	lcdlib.c:60: DB = (c << 4) | 0x08; // keep the RS
      000075 EF               [12]  449 	mov	a,r7
      000076 C4               [12]  450 	swap	a
      000077 54 F0            [12]  451 	anl	a,#0xf0
      000079 FF               [12]  452 	mov	r7,a
      00007A 74 08            [12]  453 	mov	a,#0x08
      00007C 4F               [12]  454 	orl	a,r7
      00007D F5 90            [12]  455 	mov	_P1,a
                                    456 ;	lcdlib.c:61: E = 1;
                                    457 ;	assignBit
      00007F D2 92            [12]  458 	setb	_P1_2
                                    459 ;	lcdlib.c:62: E = 0;
                                    460 ;	assignBit
      000081 C2 92            [12]  461 	clr	_P1_2
                                    462 ;	lcdlib.c:63: delay(DELAY_AMOUNT);
      000083 75 82 32         [24]  463 	mov	dpl, #0x32
      000086 12r00rC2         [24]  464 	lcall	_delay
                                    465 ;	lcdlib.c:64: lcd_ready = 1;
      000089 75 3C 01         [24]  466 	mov	_lcd_ready,#0x01
                                    467 ;	lcdlib.c:65: }
      00008C 22               [24]  468 	ret
                                    469 ;------------------------------------------------------------
                                    470 ;Allocation info for local variables in function 'LCD_write_string'
                                    471 ;------------------------------------------------------------
                                    472 ;str           Allocated to registers 
                                    473 ;------------------------------------------------------------
                                    474 ;	lcdlib.c:66: void LCD_write_string(char* str) {
                                    475 ;	-----------------------------------------
                                    476 ;	 function LCD_write_string
                                    477 ;	-----------------------------------------
      00008D                        478 _LCD_write_string:
      00008D AD 82            [24]  479 	mov	r5, dpl
      00008F AE 83            [24]  480 	mov	r6, dph
      000091 AF F0            [24]  481 	mov	r7, b
                                    482 ;	lcdlib.c:67: while (*str++) {
      000093                        483 00101$:
      000093 8D 82            [24]  484 	mov	dpl,r5
      000095 8E 83            [24]  485 	mov	dph,r6
      000097 8F F0            [24]  486 	mov	b,r7
      000099 12r00r00         [24]  487 	lcall	__gptrget
      00009C FC               [12]  488 	mov	r4,a
      00009D A3               [24]  489 	inc	dptr
      00009E AD 82            [24]  490 	mov	r5,dpl
      0000A0 AE 83            [24]  491 	mov	r6,dph
      0000A2 EC               [12]  492 	mov	a,r4
      0000A3 60 1C            [24]  493 	jz	00104$
                                    494 ;	lcdlib.c:68: LCD_write_char(*str);
      0000A5 8D 82            [24]  495 	mov	dpl,r5
      0000A7 8E 83            [24]  496 	mov	dph,r6
      0000A9 8F F0            [24]  497 	mov	b,r7
      0000AB 12r00r00         [24]  498 	lcall	__gptrget
      0000AE F5 82            [12]  499 	mov	dpl,a
      0000B0 C0 07            [24]  500 	push	ar7
      0000B2 C0 06            [24]  501 	push	ar6
      0000B4 C0 05            [24]  502 	push	ar5
      0000B6 12r00r63         [24]  503 	lcall	_LCD_write_char
      0000B9 D0 05            [24]  504 	pop	ar5
      0000BB D0 06            [24]  505 	pop	ar6
      0000BD D0 07            [24]  506 	pop	ar7
      0000BF 80 D2            [24]  507 	sjmp	00101$
      0000C1                        508 00104$:
                                    509 ;	lcdlib.c:70: }
      0000C1 22               [24]  510 	ret
                                    511 ;------------------------------------------------------------
                                    512 ;Allocation info for local variables in function 'delay'
                                    513 ;------------------------------------------------------------
                                    514 ;n             Allocated to registers 
                                    515 ;------------------------------------------------------------
                                    516 ;	lcdlib.c:71: void delay(unsigned char n) {
                                    517 ;	-----------------------------------------
                                    518 ;	 function delay
                                    519 ;	-----------------------------------------
      0000C2                        520 _delay:
                                    521 ;	lcdlib.c:75: __endasm;
      0000C2                        522 dhere:
      0000C2 D5 82 FD         [24]  523 	djnz	dpl, dhere
                                    524 ;	lcdlib.c:77: }
      0000C5 22               [24]  525 	ret
                                    526 ;------------------------------------------------------------
                                    527 ;Allocation info for local variables in function 'LCD_set_symbol'
                                    528 ;------------------------------------------------------------
                                    529 ;symb          Allocated with name '_LCD_set_symbol_PARM_2'
                                    530 ;code          Allocated to registers r7 
                                    531 ;------------------------------------------------------------
                                    532 ;	lcdlib.c:79: void LCD_set_symbol(char code, const char symb[]) {
                                    533 ;	-----------------------------------------
                                    534 ;	 function LCD_set_symbol
                                    535 ;	-----------------------------------------
      0000C6                        536 _LCD_set_symbol:
      0000C6 AF 82            [24]  537 	mov	r7, dpl
                                    538 ;	lcdlib.c:84: LCD_setCgRamAddress(code); // code is the character generation memory 
      0000C8 74 40            [12]  539 	mov	a,#0x40
      0000CA 4F               [12]  540 	orl	a,r7
      0000CB F5 82            [12]  541 	mov	dpl,a
      0000CD 12r00r17         [24]  542 	lcall	_LCD_IRWrite
                                    543 ;	lcdlib.c:87: LCD_write_char(symb[0]);
      0000D0 AD*00            [24]  544 	mov	r5,_LCD_set_symbol_PARM_2
      0000D2 AE*01            [24]  545 	mov	r6,(_LCD_set_symbol_PARM_2 + 1)
      0000D4 AF*02            [24]  546 	mov	r7,(_LCD_set_symbol_PARM_2 + 2)
      0000D6 8D 82            [24]  547 	mov	dpl,r5
      0000D8 8E 83            [24]  548 	mov	dph,r6
      0000DA 8F F0            [24]  549 	mov	b,r7
      0000DC 12r00r00         [24]  550 	lcall	__gptrget
      0000DF F5 82            [12]  551 	mov	dpl,a
      0000E1 C0 07            [24]  552 	push	ar7
      0000E3 C0 06            [24]  553 	push	ar6
      0000E5 C0 05            [24]  554 	push	ar5
      0000E7 12r00r63         [24]  555 	lcall	_LCD_write_char
      0000EA D0 05            [24]  556 	pop	ar5
      0000EC D0 06            [24]  557 	pop	ar6
      0000EE D0 07            [24]  558 	pop	ar7
                                    559 ;	lcdlib.c:88: LCD_write_char(symb[1]);
      0000F0 74 01            [12]  560 	mov	a,#0x01
      0000F2 2D               [12]  561 	add	a, r5
      0000F3 FA               [12]  562 	mov	r2,a
      0000F4 E4               [12]  563 	clr	a
      0000F5 3E               [12]  564 	addc	a, r6
      0000F6 FB               [12]  565 	mov	r3,a
      0000F7 8F 04            [24]  566 	mov	ar4,r7
      0000F9 8A 82            [24]  567 	mov	dpl,r2
      0000FB 8B 83            [24]  568 	mov	dph,r3
      0000FD 8C F0            [24]  569 	mov	b,r4
      0000FF 12r00r00         [24]  570 	lcall	__gptrget
      000102 F5 82            [12]  571 	mov	dpl,a
      000104 C0 07            [24]  572 	push	ar7
      000106 C0 06            [24]  573 	push	ar6
      000108 C0 05            [24]  574 	push	ar5
      00010A 12r00r63         [24]  575 	lcall	_LCD_write_char
      00010D D0 05            [24]  576 	pop	ar5
      00010F D0 06            [24]  577 	pop	ar6
      000111 D0 07            [24]  578 	pop	ar7
                                    579 ;	lcdlib.c:89: LCD_write_char(symb[2]);
      000113 74 02            [12]  580 	mov	a,#0x02
      000115 2D               [12]  581 	add	a, r5
      000116 FA               [12]  582 	mov	r2,a
      000117 E4               [12]  583 	clr	a
      000118 3E               [12]  584 	addc	a, r6
      000119 FB               [12]  585 	mov	r3,a
      00011A 8F 04            [24]  586 	mov	ar4,r7
      00011C 8A 82            [24]  587 	mov	dpl,r2
      00011E 8B 83            [24]  588 	mov	dph,r3
      000120 8C F0            [24]  589 	mov	b,r4
      000122 12r00r00         [24]  590 	lcall	__gptrget
      000125 F5 82            [12]  591 	mov	dpl,a
      000127 C0 07            [24]  592 	push	ar7
      000129 C0 06            [24]  593 	push	ar6
      00012B C0 05            [24]  594 	push	ar5
      00012D 12r00r63         [24]  595 	lcall	_LCD_write_char
      000130 D0 05            [24]  596 	pop	ar5
      000132 D0 06            [24]  597 	pop	ar6
      000134 D0 07            [24]  598 	pop	ar7
                                    599 ;	lcdlib.c:90: LCD_write_char(symb[3]);
      000136 74 03            [12]  600 	mov	a,#0x03
      000138 2D               [12]  601 	add	a, r5
      000139 FA               [12]  602 	mov	r2,a
      00013A E4               [12]  603 	clr	a
      00013B 3E               [12]  604 	addc	a, r6
      00013C FB               [12]  605 	mov	r3,a
      00013D 8F 04            [24]  606 	mov	ar4,r7
      00013F 8A 82            [24]  607 	mov	dpl,r2
      000141 8B 83            [24]  608 	mov	dph,r3
      000143 8C F0            [24]  609 	mov	b,r4
      000145 12r00r00         [24]  610 	lcall	__gptrget
      000148 F5 82            [12]  611 	mov	dpl,a
      00014A C0 07            [24]  612 	push	ar7
      00014C C0 06            [24]  613 	push	ar6
      00014E C0 05            [24]  614 	push	ar5
      000150 12r00r63         [24]  615 	lcall	_LCD_write_char
      000153 D0 05            [24]  616 	pop	ar5
      000155 D0 06            [24]  617 	pop	ar6
      000157 D0 07            [24]  618 	pop	ar7
                                    619 ;	lcdlib.c:91: LCD_write_char(symb[4]);
      000159 74 04            [12]  620 	mov	a,#0x04
      00015B 2D               [12]  621 	add	a, r5
      00015C FA               [12]  622 	mov	r2,a
      00015D E4               [12]  623 	clr	a
      00015E 3E               [12]  624 	addc	a, r6
      00015F FB               [12]  625 	mov	r3,a
      000160 8F 04            [24]  626 	mov	ar4,r7
      000162 8A 82            [24]  627 	mov	dpl,r2
      000164 8B 83            [24]  628 	mov	dph,r3
      000166 8C F0            [24]  629 	mov	b,r4
      000168 12r00r00         [24]  630 	lcall	__gptrget
      00016B F5 82            [12]  631 	mov	dpl,a
      00016D C0 07            [24]  632 	push	ar7
      00016F C0 06            [24]  633 	push	ar6
      000171 C0 05            [24]  634 	push	ar5
      000173 12r00r63         [24]  635 	lcall	_LCD_write_char
      000176 D0 05            [24]  636 	pop	ar5
      000178 D0 06            [24]  637 	pop	ar6
      00017A D0 07            [24]  638 	pop	ar7
                                    639 ;	lcdlib.c:92: LCD_write_char(symb[5]);
      00017C 74 05            [12]  640 	mov	a,#0x05
      00017E 2D               [12]  641 	add	a, r5
      00017F FA               [12]  642 	mov	r2,a
      000180 E4               [12]  643 	clr	a
      000181 3E               [12]  644 	addc	a, r6
      000182 FB               [12]  645 	mov	r3,a
      000183 8F 04            [24]  646 	mov	ar4,r7
      000185 8A 82            [24]  647 	mov	dpl,r2
      000187 8B 83            [24]  648 	mov	dph,r3
      000189 8C F0            [24]  649 	mov	b,r4
      00018B 12r00r00         [24]  650 	lcall	__gptrget
      00018E F5 82            [12]  651 	mov	dpl,a
      000190 C0 07            [24]  652 	push	ar7
      000192 C0 06            [24]  653 	push	ar6
      000194 C0 05            [24]  654 	push	ar5
      000196 12r00r63         [24]  655 	lcall	_LCD_write_char
      000199 D0 05            [24]  656 	pop	ar5
      00019B D0 06            [24]  657 	pop	ar6
      00019D D0 07            [24]  658 	pop	ar7
                                    659 ;	lcdlib.c:93: LCD_write_char(symb[6]);
      00019F 74 06            [12]  660 	mov	a,#0x06
      0001A1 2D               [12]  661 	add	a, r5
      0001A2 FA               [12]  662 	mov	r2,a
      0001A3 E4               [12]  663 	clr	a
      0001A4 3E               [12]  664 	addc	a, r6
      0001A5 FB               [12]  665 	mov	r3,a
      0001A6 8F 04            [24]  666 	mov	ar4,r7
      0001A8 8A 82            [24]  667 	mov	dpl,r2
      0001AA 8B 83            [24]  668 	mov	dph,r3
      0001AC 8C F0            [24]  669 	mov	b,r4
      0001AE 12r00r00         [24]  670 	lcall	__gptrget
      0001B1 F5 82            [12]  671 	mov	dpl,a
      0001B3 C0 07            [24]  672 	push	ar7
      0001B5 C0 06            [24]  673 	push	ar6
      0001B7 C0 05            [24]  674 	push	ar5
      0001B9 12r00r63         [24]  675 	lcall	_LCD_write_char
      0001BC D0 05            [24]  676 	pop	ar5
      0001BE D0 06            [24]  677 	pop	ar6
      0001C0 D0 07            [24]  678 	pop	ar7
                                    679 ;	lcdlib.c:94: LCD_write_char(symb[7]);
      0001C2 74 07            [12]  680 	mov	a,#0x07
      0001C4 2D               [12]  681 	add	a, r5
      0001C5 FD               [12]  682 	mov	r5,a
      0001C6 E4               [12]  683 	clr	a
      0001C7 3E               [12]  684 	addc	a, r6
      0001C8 FE               [12]  685 	mov	r6,a
      0001C9 8D 82            [24]  686 	mov	dpl,r5
      0001CB 8E 83            [24]  687 	mov	dph,r6
      0001CD 8F F0            [24]  688 	mov	b,r7
      0001CF 12r00r00         [24]  689 	lcall	__gptrget
      0001D2 F5 82            [12]  690 	mov	dpl,a
                                    691 ;	lcdlib.c:97: }
      0001D4 02r00r63         [24]  692 	ljmp	_LCD_write_char
                                    693 	.area CSEG    (CODE)
                                    694 	.area CONST   (CODE)
                                    695 	.area XINIT   (CODE)
                                    696 	.area CABS    (ABS,CODE)
